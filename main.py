# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'shifr.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import string

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QInputDialog, QTextEdit


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 700)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setEnabled(True)
        self.textBrowser.setGeometry(QtCore.QRect(160, 80, 250, 192))
        self.textBrowser.setObjectName("textBrowser")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 0, 211, 81))
        self.label.setBaseSize(QtCore.QSize(0, 0))
        self.label.setObjectName("label")

        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(30, 330, 256, 320))
        self.textBrowser_2.setObjectName("textBrowser_2")

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(390, 390, 55, 16))
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")

        self.textBrowser_3 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_3.setGeometry(QtCore.QRect(310, 330, 256, 320))
        self.textBrowser_3.setObjectName("textBrowser_3")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(90, 287, 131, 31))
        self.pushButton.setObjectName("pushButton")
        # проверка события кнопки
        self.pushButton.clicked.connect(self.incode)

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(390, 290, 111, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        # проверка события кнопки
        self.pushButton_2.clicked.connect(self.outcode)

        MainWindow.setCentralWidget(self.centralwidget)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # вызовы собственных функций
        self.input_text()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" "
                                            "\"http://www.w3.org/TR/REC-html40/strict.dtd\">\n "
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style "
                                            "type=\"text/css\">\n "
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; "
                                            "font-size:7.8pt; font-weight:400; font-style:normal;\">\n "
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; "
                                            "margin-left:0px; margin-right:0px; -qt-block-indent:0; "
                                            "text-indent:0px;\"><br /></p></body></html>"))
        self.label.setText(_translate("MainWindow",
                                      "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt;\">Поле "
                                      "ввода</span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "Зашифровать"))
        self.pushButton_2.setText(_translate("MainWindow", "Расшифровать"))

        # создание 2 глобальных переменных общего класса

        self.list_Text_Edit_Alph = ['а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п',
                                    'р', 'с',
                                    'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я', ' ', 'я',
                                    'я', ]

        self.list_Text_Edit_Code = ['1/1', '1/2', '1/3', '1/4', '1/5', '1/6', '2/1', '2/2', '2/3', '2/4', '2/5', '2/6',
                                    '3/1', '3/2', '3/3', '3/4', '3/5',
                                    '3/6', '4/1',
                                    '4/2', '4/3', '4/4', '4/5', '4/6', '5/1', '5/2', '5/3', '5/4', '5/5', '5/6',
                                    '6/1', '6/2', '6/3', '-', '6/5', '6/6']

    def input_text(self):
        self.txt = QTextEdit(self.textBrowser)

    def incode(self):
        self.text = self.txt.toPlainText()
        self.t = list(self.text)
        self.inMirabo()

    def inMirabo(self):

        self.M = [[0 for j in range(6)] for i in range(6)]
        n = 0
        for i in range(6):
            for j in range(6):
                self.M[i][j] = self.list_Text_Edit_Alph[i + j + n]
            n += 5

        z = 0
        while z != len(self.t):
            for i in range(6):
                for j in range(6):
                    if z == len(self.t):
                        return
                    if self.t[z] == self.M[i][j]:
                        z += 1
                        self.out = str(i + 1) + str('/') + str(j + 1)
                        self.next = self.out

                        if self.out == str(6) + str('/') + str(4):
                            self.textBrowser_2.append('-')
                            break

                        if self.textBrowser_2 == self.out:

                            self.textBrowser_2.append(self.next)

                        else:
                            self.textBrowser_2.append(self.out)

    def outcode(self):
        self.text_c = self.txt.toPlainText()
        self.t_c = list(self.text_c)
        self.list = []
        for i in range(len(self.t_c)):
            if self.t_c[i] == '/':
                self.bck = str(self.t_c[i - 1])
                self.nxt = str(self.t_c[i + 1])
                self.list.append(self.bck + '/' + self.nxt)
            elif self.t_c[i] == '-':
                self.list.append('-')

        self.outMirabo()

    def outMirabo(self):

        self.M = [[0 for j in range(6)] for i in range(6)]
        n = 0
        for i in range(6):
            for j in range(6):
                self.M[i][j] = self.list_Text_Edit_Alph[i + j + n]
            n += 5

        self.L = [[0 for j in range(6)] for i in range(6)]
        n = 0
        for i in range(6):
            for j in range(6):
                self.L[i][j] = self.list_Text_Edit_Code[i + j + n]
            n += 5

        ln = self.t_c.count('\n') + 1
        z = 0
        while z != ln:
            for i in range(6):
                for j in range(6):
                    if z == ln:
                        return
                    if self.list[z] == self.L[i][j]:
                        z += 1
                        self.out_c = self.M[i][j]

                        if self.out_c == str(5) + str(3):
                            self.textBrowser_3.append('-')

                        else:
                            self.textBrowser_3.append(str(self.out_c))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
